# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more informatgion see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on : [push, pull_request]
permissions:
  contents: write
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps: 
  
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file devop_dataframe/pom.xml
    - name: step 4 show resultat
      run: ls -a
        
    - name: step 5 run test
      run: mvn -f devop_dataframe/pom.xml test
     #Generation de coverage code avec jacoco
    
    - name: Generate JaCoCo Badge
      uses: cicirello/jacoco-badge-generator@v2
      with:
          generate-branches-badge: true
          jacoco-csv-file: devop_dataframe/target/site/jacoco/jacoco.csv
          badges-directory: .github/badges

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

    - name: Commit the badge (if it changed)
      run: |
            git config --global user.name 'hacenesuper'
            git config --global user.email 'haceneamrane22@gmail.com'
            git add -A
            git commit -m "Autogenerated JaCoCo coverage badge"
            git push origin main
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
          name: jacoco-report
          path: app/target/site/jacoco/
          th: target/site/jacoco/
              
    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
